package com.bjpowernode.p2p.dao.loan;

import com.bjpowernode.p2p.model.loan.LoanInfo;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public interface LoanInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    int insert(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    int insertSelective(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    LoanInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    int updateByPrimaryKeySelective(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    int updateByPrimaryKeyWithBLOBs(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Mon Sep 17 09:12:20 CST 2018
     */
    int updateByPrimaryKey(LoanInfo record);

    /**
     * 查询历史年化收益率
     *
     * @return
     */
    Double queryHistoryAverage();


    /**
     * 根据不同的产品类型查出不同数量的数据
     */
    List<LoanInfo> queryLoanInfoListByProductType(Map<String, Object> paramMap);

    /**
     * 查询总数据量
     *
     * @param paramMap
     * @return
     */
    Long selectTotal(Map<String, Object> paramMap);



}